
dependencies {
    compile "org.openjfx:javafx-base:${project.openjfxVersion}"
    compile "org.openjfx:javafx-graphics:${project.openjfxVersion}"
    compile "org.openjfx:javafx-controls:${project.openjfxVersion}"
    compile "org.openjfx:javafx-fxml:${project.openjfxVersion}"

    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version:project.jUnitPlatformVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version:project.jUnitVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version:project.jUnitVersion
}

compileJava {
    doFirst {
        options.encoding = 'UTF-8'

        options.compilerArgs = [
                '--module-path', project.openjfx,
                '--add-modules', 'javafx.base',
                '--add-modules', 'javafx.controls',
                '--add-modules', 'javafx.fxml',
                '--add-modules', 'javafx.web',
                '--add-modules', 'javafx.graphics',
                '--add-modules', 'javafx.media'
        ]
    }
}

javadoc {
    options.addStringOption('-module-path', project.openjfx)
    options.addStringOption('-add-modules', 'javafx.base,javafx.controls,javafx.fxml,javafx.web,javafx.graphics,javafx.media')
}

sourceSets {
    main.java.srcDir('src/main')
    test.java.srcDir('src/test')
}


jar {
    archiveName 'temporal_viewer.jar'
    from configurations.compile.collect{ zipTree( it) }
}


task javadocJar(type: Jar, group: 'documentation') {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar
}